// https://github.com/sass/sass/issues/659#issuecomment-64819075
@function char($character-code) {
  @if function-exists("selector-append") {
    @return unquote("\"\\#{$character-code}\"");
  }

  @return str-slice("\x", 1, 1) + $character-code;
}

$icon-font-family: VideoJS;

@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
          play: 'f101',
          play-circle: 'f102',
          pause: 'f103',
          volume-mute: 'f104',
          volume-low: 'f105',
          volume-mid: 'f106',
          volume-high: 'f107',
          fullscreen-enter: 'f108',
          fullscreen-exit: 'f109',
          square: 'f10a',
          spinner: 'f10b',
          subtitles: 'f10c',
          captions: 'f10d',
          chapters: 'f10e',
          share: 'f10f',
          cog: 'f110',
          circle: 'f111',
          circle-outline: 'f112',
          circle-inner-circle: 'f113',
          hd: 'f114',
          cancel: 'f115',
          replay: 'f116',
          facebook: 'f117',
          gplus: 'f118',
          linkedin: 'f119',
          twitter: 'f11a',
          tumblr: 'f11b',
          pinterest: 'f11c',
          audio-description: 'f11d',
          audio: 'f11e',
          next-item: 'f11f',
          previous-item: 'f120',
          picture-in-picture-enter: 'f121',
          picture-in-picture-exit: 'f122',
          seek-forward: 'f123',
          seek-backward: 'f124',
          next-episode: 'f125',
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: char($content);
    }
  }
}
